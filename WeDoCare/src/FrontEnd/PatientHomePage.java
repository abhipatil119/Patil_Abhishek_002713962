/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FrontEnd;
import BackEnd.Encounter;
import BackEnd.EncounterHistory;
import FrontEnd.HospitalReg;
import BackEnd.HospitalRegisteration;
import BackEnd.HospitalRegisteration;
import BackEnd.JdbcConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author patil
 */
public class PatientHomePage extends javax.swing.JFrame {

    /**
     * Creates new form PatientHomePage
     */
    public PatientHomePage() {
        initComponents();
    }
    Connection conn;
    PreparedStatement pst;
    ResultSet rs;
//    ArrayList<HospitalReg> hoslist = new ArrayList<>();
    ArrayList<Encounter> app = new ArrayList<>();
    ArrayList<HospitalRegisteration> hosreg = new ArrayList<>();
    HospitalReg hos = new HospitalReg();
    ArrayList<EncounterHistory> Ehis = new ArrayList<>();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public ArrayList<HospitalRegisteration> getHospitalRegistrations(){
         String hos_name =  "Mayuri_hospital";
               String hos_id = "100";
               String community = "Mission Main";
               String hospital_address = "LMA";
               String doc_name = "doctor";
               String spec = "speciality";
               Long zip_code = 134568L;
               hosreg.add(new HospitalRegisteration(hos_name,zip_code ,hos_id,doc_name,community,hospital_address,spec));
        return hosreg;
    }
    
    public void encounter(String username, String password){
        
    try {
            JdbcConnection jdbc = new JdbcConnection();
            Connection conn = jdbc.Connect();
            
            pst = conn.prepareStatement("(SELECT patient_name,patient_id,city,symptoms,encounter_no,blood_pressure,heart_rate,tempreture,pulse,doctor_name,doctor_id,medication,diet,hospital,date_of_checkup from  vital_encountor_history where patient_id = (SELECT patient_id FROM PatientReg Where username = ? and password = ?));");
            pst.setString(1,username);
            pst.setString(2,password);
            rs = pst.executeQuery();
//            DefaultTableModel model = (DefaultTableModel) encountertable.getModel();
//            String ps = rs.getString(1);
//            System.out.println(ps);
            while(rs.next())
            {
               String patient_name =  rs.getString("patient_name");
               String patient_id = rs.getString("patient_id");
               String city = rs.getString("city");
               String symptoms = rs.getString("symptoms");
               int encounter_no = rs.getInt("encounter_no");
  
               int blood_pressure = rs.getInt("blood_pressure");
               Double heart_rate = rs.getDouble("heart_rate");
               Double tempreture = rs.getDouble("tempreture");
               int pulse = rs.getInt("pulse");
               String doctor_name = rs.getString("doctor_name");
               String doctor_id = rs.getString("doctor_id");
               String medication = rs.getString("medication");
               String diet = rs.getString("diet");
               String hospital = rs.getString("hospital");
               Date date_of_checkup = rs.getDate(15);
               
               Ehis.add(new EncounterHistory(patient_name,patient_id,city,symptoms,encounter_no,blood_pressure,heart_rate,tempreture,pulse,doctor_name,doctor_id,medication,diet,hospital,date_of_checkup));
               DefaultTableModel model = (DefaultTableModel) encountertable.getModel();
               
               model.addRow(new Object[] {patient_name,patient_id,city,symptoms,encounter_no,blood_pressure,heart_rate,tempreture,pulse,doctor_name,doctor_id,medication,diet,hospital,date_of_checkup});
          
            
            }
            
            
        
        } catch (SQLException ex) {
            Logger.getLogger(DoctorHomePage.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    }
    
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        encountertable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        patient_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Doc_name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        area = new javax.swing.JComboBox<>();
        community = new javax.swing.JComboBox<>();
        doctor = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        Finder = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        find = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Welcome Patient");

        encountertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "patient_name", "patient_id", "city", "symptoms", "encounter_no", "blood_pressure", "heart_rate", "tempreture", "pulse", "doctor_name", "doctor_id", "medication", "diet", "hospital", "date_of_checkup"
            }
        ));
        encountertable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encountertableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(encountertable);

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Book Appoitment here");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Patient_name");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Doctor_name");

        Doc_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Doc_nameActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Appoitment Date");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Appoitment time");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10:00", "10:15", "10:30", "10:45", "11:00", "11:15", "11:30", "11:45", "12:00", "12:15", "12:30", "12:45", "14:15", "14:30", "14:45", "15:00", "15:15", "15:30", "15:45", "16:00", "16:15", "16:30", "16:45", "17:00", "17:15" }));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setText("Find");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Doc_name)
                            .addComponent(patient_name)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(patient_name, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(Doc_name, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setText("Hospital Finder in Community");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Enter City");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "Austin", "Las Vegas", "Seattle", "Denver" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Enter Area");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Select Hospital");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("Select Doctor");

        area.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                areaMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                areaMouseExited(evt);
            }
        });
        area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaActionPerformed(evt);
            }
        });

        community.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                communityMouseClicked(evt);
            }
        });
        community.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                communityKeyPressed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Finder.setText("Finder");
        Finder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(community, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(Finder, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(area, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel7))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(112, 112, 112))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(community, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(doctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(Finder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        find.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(find);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1006, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(546, 546, 546)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(182, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(121, 121, 121)
                                .addComponent(jButton3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encountertableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encountertableMouseClicked
        // TODO add your handling code here:
        

        //        Level.setText(level);
        //        StartDate.setText(startdate);
        //        Ename.setText(name);
        //        Eid.setText(id);

    }//GEN-LAST:event_encountertableMouseClicked

    private void Doc_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Doc_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Doc_nameActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        
        
        
        
        
        
        
        
        try {
            JdbcConnection jdbc = new JdbcConnection();
            Connection conn = jdbc.Connect();
            
            pst = conn.prepareStatement("SELECT hospital_name, hospital_id, community, hospital_address, doctor_name, speciality ,zipcode FROM hospitalReg ");
            rs = pst.executeQuery();
//            DefaultTableModel model = (DefaultTableModel) encountertable.getModel();
//            String ps = rs.getString(1);
//            System.out.println(ps);
            while(rs.next())
            {
               String hos_name =  rs.getString("hospital_name");
               String hos_id = rs.getString("hospital_id");
               String community = rs.getString("community");
               String hospital_address = rs.getString("hospital_address");
               String doc_name = rs.getString("doctor_name");
               String spec = rs.getString("speciality");
               Long zip_code = rs.getLong("zipcode");
               hosreg.add(new HospitalRegisteration(hos_name,zip_code ,hos_id,doc_name,community,hospital_address,spec));
               
            }
            
           //  String zip = jTextField1.getText();
//             long zip_no = Long.parseLong(zip);
//              for (int j =0; j < hosreg.size();j++){
////              System.out.println(hosreg.get(j).getHospital_name());
//              
//              }
//               for (int i = 0; i< hosreg.size(); i++){
//                if (hosreg.get(i).getZipcode() == zip_no ){
//                    //System.out.println(hosreg.get(i).getHospital_name());
//                    Object[] obj = {hosreg.get(i).getHospital_name(), hosreg.get(i).getDoctor_name(),hosreg.get(i).getZipcode()};
//                        find.setRowCount(0);
//                        find.addRow(obj);
//                        new SystemDoctor().doctor_gain(hosreg);
//                    break;
//        }
        
//               String tempreture = rs.getString("tempreture");
//               String pulse = rs.getString("pulse");
//               String doctor_name = rs.getString("doctor_name");
//               String doctor_id = rs.getString("doctor_id");
//               String medication = rs.getString("medication");
//               String diet = rs.getString("diet");
//               String hospital = rs.getString("hospital");
//               Date date_of_checkup = rs.getDate(15);
               
//               DefaultTableModel model = (DefaultTableModel) encountertable.getModel();
               
//               model.addRow(new Object[] {patient_name,patient_id,city,symptoms,encounter_no,blood_pressure,heart_rate,tempreture,pulse,doctor_name,doctor_id,medication,diet,hospital,date_of_checkup});
          
            
            }
            
            
        
         catch (SQLException ex) {
            Logger.getLogger(DoctorHomePage.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
        
        
        
        
//        
//        DefaultTableModel find = (DefaultTableModel) finder.getModel();
//        System.out.println(hos.HospitalArray().get(0).getDoctor_name() + " " + hos.HospitalArray().get(0).getHospital_id() + " " + hos.HospitalArray().get(0).getZipcode());
//        
//        
//        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

   
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
            // TODO add your handling code here:
            JdbcConnection jdbc = new JdbcConnection();
            Connection conn = jdbc.Connect();
            
//            int age = Integer.parseInt(age1);
           
        try {
            pst = conn.prepareStatement("SELECT patient_name,doctor_name,appointment_date,appointment_time FROM appointment");
            rs = pst.executeQuery();
            while(rs.next())
            {
               String patient_name =  rs.getString("patient_name");
               String doctor_name = rs.getString("doctor_name");
               Date appointment_date = rs.getDate("appointment_date");
               String appointment_time = rs.getString("appointment_time");
               
               app.add(new Encounter(patient_name,doctor_name ,appointment_date,appointment_time));
               
              
                
            }
            } catch (SQLException ex) {
            Logger.getLogger(PatientHomePage.class.getName()).log(Level.SEVERE, null, ex);
        }
            String Pname = patient_name.getText();
            String Dname = Doc_name.getText();
            Date app_date = jDateChooser1.getDate();
            String time = jComboBox1.getSelectedItem().toString();
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            final String stringDate = dateFormat.format(app_date);
            
           for (int i = 0; i< app.size(); i++){
               System.out.println(app.get(i).getAppointment_date());
                if ((app.get(i).getAppointment_date().toString() == null ? (stringDate) == null : app.get(i).getAppointment_date().toString().equals(stringDate)) || (app.get(i).getAppointment_time() == null ? (time) == null : app.get(i).getAppointment_time().equals(time)))
                    
                  {

                JOptionPane.showMessageDialog(this,
                "This Appointment is booked by someone",
                "Try again",
                JOptionPane.ERROR_MESSAGE);
                  break;
                }
                    
                    
                
                else 
                {
                    app.add(new Encounter(Pname,Dname ,app_date,time));
                try {
                    pst = conn.prepareStatement("INSERT INTO appointment(patient_name, doctor_name, appointment_date, appointment_time) values (?,?,?,?)");
                    pst.setString(1,Pname);
                    pst.setString(2,Dname);
                    pst.setString(3,stringDate);
                    pst.setString(4, time);
            
            
                int k = pst.executeUpdate();
                if (k==1){
                    JOptionPane.showMessageDialog(this, "Appoitment Booked Successfully !!!");
                        patient_name.setText("");
                        Doc_name.setText("");
                    jDateChooser1.setDate(app_date);
                    jComboBox1.setSelectedItem("");
                    break;
                }
                else
                    {

                    JOptionPane.showMessageDialog(this,
                    "Error in booking appointment!",
                    "Try again",
                    JOptionPane.ERROR_MESSAGE);
                    break;
                    }


            } catch (SQLException ex) {
                Logger.getLogger(HospitalReg.class.getName()).log(Level.SEVERE, null, ex);
            }

                    }
            
             
        
        
        
        
           }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        SystemDoctor logpage = new SystemDoctor();
        logpage.doctor_gain(hosreg);
        logpage.show();
        dispose();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        String city = jComboBox2.getSelectedItem().toString();
//        String lo = "longwood";
//        area.addItem(lo);
        JdbcConnection jdbc = new JdbcConnection();
            Connection conn = jdbc.Connect();
            
//            int age = Integer.parseInt(age1);
           
        try {
            pst = conn.prepareStatement("SELECT area FROM community where city = ?");
            pst.setString(1,city);
            rs = pst.executeQuery();
            while(rs.next())
            {
               String ar =  rs.getString("area");
               System.out.println(ar);
               area.addItem(ar);
                
            }
        }catch (SQLException ex) {
                Logger.getLogger(HospitalReg.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        
        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void FinderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinderActionPerformed
        // TODO add your handling code here:
        String a1 = area.getSelectedItem().toString();
//        String lo = "longwood";
//        area.addItem(lo);
        JdbcConnection jdbc = new JdbcConnection();
            Connection conn = jdbc.Connect();
            
//            int age = Integer.parseInt(age1);
           
        try {
            pst = conn.prepareStatement("SELECT hospital FROM community where area = ?");
            pst.setString(1,a1);
            rs = pst.executeQuery();
            while(rs.next())
            {
               String hos =  rs.getString("hospital");
               
               community.addItem(hos);
                
            }
        }catch (SQLException ex) {
                Logger.getLogger(HospitalReg.class.getName()).log(Level.SEVERE, null, ex);
            }
            
    }//GEN-LAST:event_FinderActionPerformed

    private void areaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaActionPerformed
        // TODO add your handling code here:
      
        
        
        
    }//GEN-LAST:event_areaActionPerformed

    private void areaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_areaMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_areaMouseClicked

    private void communityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_communityMouseClicked
        // TODO add your handling code here:
         // TODO add your handling code here:
        
                                     

    }//GEN-LAST:event_communityMouseClicked

    private void areaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_areaMouseExited
        // TODO add your handling code here:
        
    }//GEN-LAST:event_areaMouseExited

    private void communityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_communityKeyPressed
        // TODO add your handling code here:
        String hospital = community.getSelectedItem().toString();
//        String lo = "longwood";
//        area.addItem(lo);
        JdbcConnection jdbc = new JdbcConnection();
            Connection conn = jdbc.Connect();
            
//            int age = Integer.parseInt(age1);
           
        try {
            pst = conn.prepareStatement("SELECT doctor FROM community where hospital = ?");
            pst.setString(1,hospital);
            rs = pst.executeQuery();
            while(rs.next())
            {
               String doc =  rs.getString("doctor");
               
               doctor.addItem(doc);
                
            }
        }catch (SQLException ex) {
                Logger.getLogger(HospitalReg.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_communityKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientHomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Doc_name;
    private javax.swing.JButton Finder;
    private javax.swing.JComboBox<String> area;
    private javax.swing.JComboBox<String> community;
    private javax.swing.JComboBox<String> doctor;
    private javax.swing.JTable encountertable;
    private javax.swing.JTable find;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField patient_name;
    // End of variables declaration//GEN-END:variables
}
